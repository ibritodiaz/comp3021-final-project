[{"filePath":"C:\\Users\\Inti\\Projects\\Task Management API\\eslint.config.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\Inti\\Projects\\Task Management API\\src\\api\\v1\\controllers\\taskController.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\Inti\\Projects\\Task Management API\\src\\api\\v1\\middleware\\validationMiddleware.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\Inti\\Projects\\Task Management API\\src\\api\\v1\\models\\taskModel.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\Inti\\Projects\\Task Management API\\src\\api\\v1\\repositories\\taskRepository.ts","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'id' is assigned a value but never used.","line":16,"column":11,"nodeType":null,"messageId":"unusedVar","endLine":16,"endColumn":13}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\r\n * Repository function to create a task in the database.\r\n * @param taskData - Data of the task to create.\r\n * @returns Created task with ID.\r\n */\r\nexport interface Task {\r\n  id: string;\r\n  userId: string;\r\n  title: string;\r\n  priority: string;\r\n  status: string;\r\n  dueDate: string;\r\n}\r\n\r\nexport const createTask = async (taskData: Task): Promise<Task> => {\r\n  const { id, ...rest } = taskData;\r\n  return { id: \"placeholder_id\", ...rest };\r\n};\r\n\r\n/**\r\n * Repository function to retrieve tasks by userId.\r\n * @param userId - The userId to filter tasks by.\r\n * @returns Array of tasks for the given userId.\r\n */\r\nexport const getTasksByUserId = async (userId: string): Promise<Task[]> => {\r\n  return [\r\n    {\r\n      id: \"placeholder_id_1\",\r\n      userId,\r\n      title: \"Sample Task 1\",\r\n      priority: \"low\",\r\n      status: \"open\",\r\n      dueDate: new Date().toISOString(),\r\n    },\r\n    {\r\n      id: \"placeholder_id_2\",\r\n      userId,\r\n      title: \"Sample Task 2\",\r\n      priority: \"medium\",\r\n      status: \"in-progress\",\r\n      dueDate: new Date().toISOString(),\r\n    },\r\n  ];\r\n};\r\n\r\n/**\r\n * Repository function to update the status of a task.\r\n * @param taskId - The ID of the task to update.\r\n * @param status - The new status of the task.\r\n * @returns Updated task with ID and status.\r\n */\r\nexport const updateTaskStatus = async (\r\n  taskId: string,\r\n  status: string\r\n): Promise<{ id: string; status: string }> => {\r\n  return { id: taskId, status };\r\n};\r\n\r\n/**\r\n * Repository function to delete a task.\r\n * @param taskId - The ID of the task to delete.\r\n * @returns Confirmation of deletion with ID.\r\n */\r\nexport const deleteTask = async (\r\n  taskId: string\r\n): Promise<{ id: string; deleted: boolean }> => {\r\n  return { id: taskId, deleted: true };\r\n};","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\Inti\\Projects\\Task Management API\\src\\api\\v1\\routes\\taskRoutes.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\Inti\\Projects\\Task Management API\\src\\api\\v1\\services\\taskService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\Inti\\Projects\\Task Management API\\src\\api\\v1\\validation\\taskValidation.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\Inti\\Projects\\Task Management API\\src\\app.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\Inti\\Projects\\Task Management API\\src\\server.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]}]